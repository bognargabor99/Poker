buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'jacoco'
}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'hu.bme.aut.thesis.poker'
version '1.0.0'

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }

    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    intTest.kotlin.srcDirs = intTest.java.srcDirs = ['integrationTest']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
    intTest.resources.srcDirs = ['integrationtestresources']
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

test {
    reports {
        junitXml.outputLocation.set(layout.buildDirectory.dir("unit-test-results"))
        junitXml.outputPerTestCase = true
    }
}

jacocoTestReport {
    executionData tasks.withType(Test).findAll { it.state.executed }
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
}

tasks.withType(Test) {
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test

    reports {
        junitXml.outputLocation.set(layout.buildDirectory.dir("integration-test-results"))
        junitXml.outputPerTestCase = true
    }
}

check.dependsOn integrationTest
jacocoTestReport.dependsOn check

dependencies {
    // SQLite database connection
    implementation "org.jetbrains.exposed:exposed-core:$exposedVersion"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposedVersion"
    implementation 'org.xerial:sqlite-jdbc:3.36.0.2'

    // For SSL certificate
    implementation "io.ktor:ktor-network-tls-certificates:$ktor_version"

    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"
    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    intTestImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}
